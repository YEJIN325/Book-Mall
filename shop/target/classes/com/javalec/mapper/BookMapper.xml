<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.javalec.mapper.BookMapper">
		
		<!-- 검색 조건 -->
		<sql id="criteria">
			<trim prefix="where (" suffix=")" prefixOverrides="AND">
				<foreach item="type" collection="typeArr">
					<trim prefix="AND">
						<choose>
							<when test="type == 'A'.toString()">
								<trim prefixOverrides="or">
									<foreach collection="authorArr" item="authorId">
										<trim prefix="or">
											a.authorId = #{authorId}
										</trim>
									</foreach>
								</trim>
							</when>
							<when test="type == 'C'.toString()">
								a.cateCode like concat('%', #{cateCode}, '%')
							</when>
							<when test="type == 'T'.toString()">
								bookName like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</sql>
		
		<!-- 상품 검색 -->
		<select id="getGoodsList" resultType="com.javalec.model.BookVO">
			select bookId, bookName, b.authorName, a.authorId, c.cateName, a.cateCode, publisher, publiYear, bookPrice, bookDiscount
			from book a left outer join book_author b on a.authorId = b.authorId
			left outer join book_cate c on a.cateCode = c.cateCode
			<include refid="criteria"></include>
			order by bookId desc
			limit #{skip}, #{amount}
		</select>
		
		<!-- 상품 총 갯수 -->
		<select id="goodsGetTotal" resultType="int">
			select count(*) from book a
			<include refid="criteria"></include>
		</select>
		
		<!-- 작가 id 리스트 요청 -->
		<select id="getAuthorIdList" resultType="String">
			select authorId from book_author where authorName like concat('%', #{keyword}, '%')
		</select>
		
		<!-- 국내 카테고리 리스트 -->
		<select id="getDomCateCode" resultType="com.javalec.model.CateVO">
			<![CDATA[
			select * from book_cate where cateCode > 100000 and cateCode < 200000
			]]>
		</select>
		
		<!-- 외국 카테고리 리스트 -->
		<select id="getAbCateCode" resultType="com.javalec.model.CateVO">
			<![CDATA[
			select * from book_cate where cateCode > 200000 and cateCode < 300000
			]]>
		</select>
		
		<!-- 검색 대상 카테고리 리스트 -->
		<select id="getCateList" resultType="String">
			select distinct cateCode from book where
			<foreach item="type" collection="typeArr">
				<choose>
					<when test="type == 'A'.toString()">
						<trim prefixOverrides="or">
							<foreach collection="authorArr" item="authorId">
								<trim prefix="or">
									authorId = #{authorId}
								</trim>
							</foreach>						
						</trim>
					</when>
					<when test="type == 'T'.toString()">
						bookName like concat('%', #{keyword}, '%')
					</when>
				</choose>
			</foreach>
		</select>
		
		<!-- 카테고리 정보(+검색대상 갯수) -->
		<select id="getCateInfo" resultType="com.javalec.model.CateFilterVO">
			select distinct count(*) cateCount, a.cateCode, b.cateName from book a left join book_cate b on a.cateCode = b.cateCode
			where
			<foreach item="type" collection="typeArr">
				<choose>
					<when test="type == 'A'.toString()">
						<trim prefix="(" suffix=")" prefixOverrides="or">
							<foreach collection="authorArr" item="authorId">
								<trim prefix="or">
									authorId = #{authorId}
								</trim>
							</foreach>
						</trim>
						and a.cateCode = #{cateCode}
					</when>
					<when test="type == 'T'.toString()">
						bookName like concat('%', #{keyword}, '%') and a.cateCode = #{cateCode}
					</when>
				</choose>
			</foreach>
		</select>
		
		<!-- 상품 정보 -->
		<select id="getGoodsInfo" resultType="com.javalec.model.BookVO">
			select a.bookId, a.bookName, a.authorId, b.authorName, a.publiYear, a.publisher, a.cateCode, c.cateName, a.bookPrice, a.bookStock, a.bookDiscount, a.bookIntro, a.bookContents
			from book a left outer join book_author b on a.authorId = b.authorId
			left outer join book_cate c on a.cateCode = c.cateCode
			where bookId = #{bookId}
		</select>
	</mapper>